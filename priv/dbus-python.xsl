<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet 
    version="1.0"
    xmlns:db="https://raw.githubusercontent.com/kbirken/dbus-emf-model/master/plugins/model.emf.dbusxml/spec/introspect.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:ec="http://exslt.org/common"
    extension-element-prefixes="ec" >

  <xsl:strip-space elements="*" />

  <xsl:output method="text" 
	      encoding="utf-8" 
	      indent="no" />

  <xsl:param name="ns" select="'org.ow2.erocci.backend'" />  
  <xsl:param name="name" select="'SampleService'" />

  <xsl:template match="db:interface" >
    <xsl:text>    #&#10;</xsl:text>
    <xsl:text>    # D-Bus Interface: </xsl:text><xsl:value-of select="@name" /><xsl:text>&#10;</xsl:text>
    <xsl:text>    #&#10;</xsl:text>

    <xsl:apply-templates select="db:method" />

    <xsl:text>&#10;</xsl:text>
  </xsl:template>

  <xsl:template match="db:method" >
    <xsl:text>    @dbus.service.method("</xsl:text>
    <xsl:value-of select="@name" />
    <xsl:text>", in_signature='</xsl:text>
    <xsl:for-each select="db:arg[@direction='in']" ><xsl:value-of select="@type" /></xsl:for-each>
    <xsl:text>' out_signature='</xsl:text> 
    <xsl:for-each select="db:arg[@direction='out']" ><xsl:value-of select="@type" /></xsl:for-each>   
    <xsl:text>')&#10;</xsl:text>

    <xsl:text>    def </xsl:text><xsl:value-of select="@name" />
    <xsl:text>(self</xsl:text>
    <xsl:for-each select="db:arg[@direction='in']" >
      <xsl:text>, </xsl:text><xsl:value-of select="@name" />
    </xsl:for-each>
    <xsl:text>):&#10;</xsl:text>

    <xsl:text>        return </xsl:text>
    <xsl:text>&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>
  </xsl:template>

  <xsl:template match="db:node" >
    <xsl:text>#!/usr/bin/env python&#10;</xsl:text>
    <xsl:text>#&#10;</xsl:text>
    <xsl:text># generated by dbus-python.xsl&#10;</xsl:text>
    <xsl:text>#&#10;</xsl:text>
    <xsl:text>from gi.repository import Gtk&#10;</xsl:text>
    <xsl:text>from dbus.mainloop.glib import DBusGMainLoop&#10;</xsl:text>
    <xsl:text>import signal&#10;</xsl:text>
    <xsl:text>import dbus&#10;</xsl:text>
    <xsl:text>import dbus.service&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>
    <xsl:text>SERVICE = "</xsl:text>
    <xsl:value-of select="$ns" /><xsl:text>.</xsl:text><xsl:value-of select="$name" />
    <xsl:text>"&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>
    <xsl:text>class </xsl:text><xsl:value-of select="$name" /><xsl:text>(dbus.service.Object):&#10;</xsl:text>
    <xsl:text>    def __init__(self):&#10;</xsl:text>
    <xsl:text>        bus_name = dbus.service.BusName(SERVICE, bus=dbus.SessionBus())&#10;</xsl:text>
    <xsl:text>        dbus.service.Object.__init__(self, bus_name, '/')&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>

    <xsl:apply-templates select="db:interface" />

    <xsl:text>&#10;</xsl:text>
    <xsl:text>    @dbus.service.method(dbus.PROPERTIES_IFACE, in_signature='ss', out_signature='v')&#10;</xsl:text>
    <xsl:text>    def Get(self, interface_name, property_name):&#10;</xsl:text>
    <xsl:text>        return \"\"&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>
    <xsl:text>    @dbus.service.method(dbus.PROPERTIES_IFACE, in_signature='s', out_signature='a{sv}')&#10;</xsl:text>
    <xsl:text>    def GetAll(self, interface_name):&#10;</xsl:text>
    <xsl:text>        return {}&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>
    <xsl:text>    @dbus.service.signal(dbus.PROPERTIES_IFACE, signature='sa{sv}as')&#10;</xsl:text>
    <xsl:text>    def PropertiesChanged(self, interface_name, changed_properties, invalidated_properties):&#10;</xsl:text>
    <xsl:text>        pass&#10;</xsl:text>
    <xsl:text>&#10;</xsl:text>
    <xsl:text>signal.signal(signal.SIGINT, signal.SIG_DFL)&#10;</xsl:text>
    <xsl:text>DBusGMainLoop(set_as_default=True)&#10;</xsl:text>
    <xsl:text>service = </xsl:text><xsl:value-of select="$name" /><xsl:text>()&#10;</xsl:text>
    <xsl:text>Gtk.main()&#10;</xsl:text>

  </xsl:template>

</xsl:stylesheet>
